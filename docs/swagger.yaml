basePath: /api/v1
definitions:
  customers.CreateRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  customers.CreateResponse:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
  customers.Customer:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
  customers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  customers.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  customers.UpdateRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  customers.UpdateResponse:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  users.CreateRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  users.CreateResponse:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
  users.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  users.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  users.UpdateRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  users.UpdateResponse:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
  users.User:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API documentation for Base
  title: Base API
  version: "1.0"
paths:
  /customers:
    get:
      consumes:
      - application/json
      description: Get a list of all Customer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/customers.Customer'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List Customer
      tags:
      - customers
    post:
      consumes:
      - application/json
      description: Create a new Customer with the input payload
      parameters:
      - description: Create Customer
        in: body
        name: customers
        required: true
        schema:
          $ref: '#/definitions/customers.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/customers.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new Customer
      tags:
      - customers
  /customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Customer by its ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customers.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a Customer
      tags:
      - customers
    get:
      consumes:
      - application/json
      description: Get a Customer by its ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customers.Customer'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/customers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a Customer
      tags:
      - customers
    put:
      consumes:
      - application/json
      description: Update a Customer by its ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Customer
        in: body
        name: customers
        required: true
        schema:
          $ref: '#/definitions/customers.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customers.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/customers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/customers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a Customer
      tags:
      - customers
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List User
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new User with the input payload
      parameters:
      - description: Create User
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/users.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/users.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new User
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a User by its ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a User by its ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a User
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a User by its ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/users.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/users.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/users.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a User
      tags:
      - users
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Api-Key
    type: apiKey
swagger: "2.0"
