#!/bin/bash

# BaseUI Setup Script

set -e

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
PURPLE='\033[0;35m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[BaseUI Setup]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[BaseUI Setup]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[BaseUI Setup]${NC} $1"
}

print_info() {
    echo -e "${PURPLE}[BaseUI Setup]${NC} $1"
}

print_status "Setting up BaseUI development environment..."

# Check for Bun first, then Node.js
if command -v bun &> /dev/null; then
    BUN_VERSION=$(bun --version)
    print_success "Bun v$BUN_VERSION detected (recommended)"
    PACKAGE_MANAGER="bun"
    INSTALL_CMD="bun install"
elif command -v node &> /dev/null; then
    NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 18 ]; then
        print_warning "Node.js version is $NODE_VERSION. BaseUI requires Node.js 18+."
        exit 1
    fi
    print_success "Node.js $(node --version) detected"
    print_info "ðŸ’¡ Consider installing Bun for better performance: https://bun.sh"
    PACKAGE_MANAGER="npm"
    INSTALL_CMD="npm install"
else
    echo "Neither Bun nor Node.js is installed. Please install one of them:"
    echo "  â€¢ Bun (recommended): https://bun.sh"
    echo "  â€¢ Node.js 18+: https://nodejs.org"
    exit 1
fi

# Check Go
if ! command -v go &> /dev/null; then
    echo "Go is not installed. Please install Go 1.19+ and try again."
    exit 1
fi

GO_VERSION=$(go version | grep -o 'go[0-9]\+\.[0-9]\+' | cut -d'o' -f2)
print_success "Go $GO_VERSION detected"

# Install frontend dependencies
if [ -d "ui" ]; then
    print_status "Installing frontend dependencies with ${PACKAGE_MANAGER}..."
    cd ui
    $INSTALL_CMD
    cd ..
    print_success "Frontend dependencies installed with ${PACKAGE_MANAGER}!"
else
    echo "ui/ directory not found. Please ensure you're in the correct project directory."
    exit 1
fi

# Download Go dependencies
print_status "Downloading Go dependencies..."
go mod download
go mod tidy
print_success "Go dependencies installed!"

# Create necessary directories
print_status "Creating project directories..."
mkdir -p static/dist
mkdir -p static/images
mkdir -p logs
print_success "Project directories created!"

# Make scripts executable
print_status "Setting up development scripts..."
chmod +x bin/dev
chmod +x bin/build
chmod +x bin/setup
print_success "Development scripts configured!"

print_success "âœ¨ BaseUI setup complete!"
echo ""
print_info "ðŸš€ Next steps:"
echo "   1. Run './bin/dev' to start development servers"
echo "   2. Open http://localhost:8080 in your browser"
echo "   3. Start building amazing applications!"
echo ""
print_info "ðŸ“š Useful commands:"
echo "   â€¢ ./bin/dev     - Start development environment"
echo "   â€¢ ./bin/build   - Build for production"
echo "   â€¢ ./bin/setup   - Run this setup again"
echo ""
print_info "ðŸ“– Documentation:"
echo "   â€¢ Frontend: ui/README.md"
echo "   â€¢ Components: ui/src/components/"
echo "   â€¢ Styles: ui/src/styles/"